version: '3.8'
services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    labels:
      com.obsidian.host: "${COM_GABBRO_HOST}"
      com.obsidian.service: "portainer"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - portainer-data:/data
    networks:
      - nginx
    environment:
      VIRTUAL_HOST: "portainer.${COM_GABBRO_DOMAIN}"
      VIRTUAL_PORT: 9000
  infisical:
    image: infisical/infisical:latest
    container_name: infisical
    labels:
      com.obsidian.host: "${COM_GABBRO_HOST}"
      com.obsidian.service: "infisical"
    environment:
      ENCRYPTION_KEY: "${COM_GABBRO_INFISICAL_ENCRYPTION_KEY}"
      JWT_SIGNUP_SECRET: "${COM_GABBRO_INFISICAL_JWT_SIGNUP_SECRET}"
      JWT_REFRESH_SECRET: "${COM_GABBRO_INFISICAL_JWT_REFRESH_SECRET}"
      JWT_AUTH_SECRET: "${COM_GABBRO_INFISICAL_JWT_AUTH_SECRET}"
      JWT_MFA_SECRET: "${COM_GABBRO_INFISICAL_JWT_MFA_SECRET}"
      JWT_SERVICE_SECRET: "${COM_GABBRO_INFISICAL_JWT_SERVICE_SECRET}"
      HTTPS_ENABLED: false
      MONGO_URL: "mongodb://${COM_GABBRO_MONGO_USERNAME}:${COM_GABBRO_MONGO_PASSWORD}@infisical-mongo:27017/?authSource=admin"
      VIRTUAL_HOST: "infisical.${COM_GABBRO_DOMAIN}"
      VIRTUAL_PORT: 80
    networks:
      - infisical
      - nginx
  infisical-mongo:
    container_name: infisical-mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${COM_GABBRO_MONGO_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${COM_GABBRO_MONGO_PASSWORD}"
    volumes:
      - infisical-mongo-data:/data/db
    networks:
      - infisical
  gabbro-secret-manager:
    build: 
      context: ./gabbro-secret-manager
    container_name: gabbro-secret-manager
    networks:
      - gabbro-secret-manager
      - nginx
    depends_on:
      - gabbro-secret-manager-mongo
    environment:
      JweSettings__EncryptionKey: "${COM_GABBRO_GSM_ENCRYPTION_KEY}"
      JweSettings__SigningKey: "${COM_GABBRO_GSM_SIGNING_KEY}"
      MongoDbSettings__ConnectionString: "mongodb://${COM_GABBRO_GSM_MONGO_USERNAME}:${COM_GABBRO_GSM_MONGO_PASSWORD}@gabbro-secret-manager-mongo:27017"
      MongoDbSettings__DatabaseName: "${COM_GABBRO_GSM_MONGO_DATABASE_NAME}"
      AuthenticationSettings__UseSecureCookies: false
      VIRTUAL_HOST: "gsm.${COM_GABBRO_DOMAIN}"
      VITRUAL_PORT: 8080
  gabbro-secret-manager-mongo:
    image: mongo
    networks:
      - gabbro-secret-manager
    # ports:
      # - 27017:27017
    volumes:
      - gabbro-secret-manager-data:/data/db
    container_name: gabbro-secret-manager-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${COM_GABBRO_GSM_MONGO_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${COM_GABBRO_GSM_MONGO_PASSWORD}"
      MONGO_INITDB_DATABASE: "${COM_GABBRO_GSM_MONGO_DATABASE_NAME}"
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    restart: always
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - nginx-certs:/etc/nginx/certs
      - nginx-vhost:/etc/nginx/vhost.d
      - nginx-html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - nginx
  nginx-acme:
    container_name: nginx-acme
    networks:
      - nginx
    image: nginxproxy/acme-companion
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - nginx-acmesh:/etc/acme.sh
      - smallstep-data:/srv/step
    environment:
      DEFAULT_EMAIL: mail@noahburghardt.ca
      ACME_CA_URI: https://smallstep:9000/acme/acme/directory
      CA_BUNDLE: /srv/step/certs/root_ca.crt
  gabbro-bot:
    build:
      context: ./gabbro-bot
    container_name: gabbro-bot
    environment:
      COM_GABBRO_DISCORD_TOKEN: "${COM_GABBRO_DISCORD_TOKEN}"
      COM_GABBRO_DOCKER_HOST: "${COM_GABBRO_DOCKER_HOST}"
      COM_GABBRO_DOCKER_USER: "${COM_GABBRO_DOCKER_USER}"
      COM_GABBRO_DOCKER_PASSWORD: "${COM_GABBRO_DOCKER_PASSWORD}"
      COM_GABBRO_DOCKER_PATH: "${COM_GABBRO_DOCKER_PATH}"
  vaultwarden:
    networks:
      - nginx
    container_name: vaultwarden
    image: vaultwarden/server:latest
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "1g"
    environment:
      VIRTUAL_HOST: "vaultwarden.${COM_GABBRO_DOMAIN}"
      LETSENCRYPT_HOST: "vaultwarden.${COM_GABBRO_DOMAIN}"
      VIRTUAL_PORT: 80
      HTTPS_METHOD: noredirect
    volumes:
      - /srv/vw-data/:/data
  smallstep:
    networks:
      - nginx
    container_name: smallstep
    image: smallstep/step-ca
    volumes:
      - smallstep-data:/home/step
    environment:
      DOCKER_STEPCA_INIT_NAME: Smallstep
      DOCKER_STEPCA_INIT_DNS_NAMES: "smallstep,localhost,$(hostname -f),smallstep.${COM_GABBRO_DOMAIN}"
      DOCKER_STEPCA_INIT_ACME: true

volumes:
  smallstep-data:
  gitlab-runner-1-data:
  gitlab-runner-2-data:
  portainer-data:
  infisical-mongo-data:
  gabbro-secret-manager-data:
  nginx-certs:
  nginx-vhost:
  nginx-html:
  nginx-acmesh:

networks:
  infisical:
  nginx:
  gabbro-secret-manager:
